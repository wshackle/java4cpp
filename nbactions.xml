<?xml version="1.0" encoding="UTF-8"?>
<actions>
        <action>
            <actionName>run</actionName>
            <packagings>
                <packaging>jar</packaging>
            </packagings>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
            </goals>
            <properties>
                <exec.args>-classpath %classpath com.github.wshackle.java4cpp.J4CppMain -verbose -natives NativeRunnable=java.lang.Runnable  -classes CallRunnable</exec.args>
                <exec.executable>java</exec.executable>
                <exec.workingdir>examples/NativeRunnable</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>debug</actionName>
            <packagings>
                <packaging>jar</packaging>
            </packagings>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
            </goals>
            <properties>
                <exec.args>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address} -classpath %classpath com.github.wshackle.java4cpp.J4CppMain -verbose -natives NativeRunnable=java.lang.Runnable  -classes CallRunnable</exec.args>
                <exec.executable>java</exec.executable>
                <jpda.listen>true</jpda.listen>
                <exec.workingdir>examples/NativeRunnable</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>profile</actionName>
            <packagings>
                <packaging>jar</packaging>
            </packagings>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
            </goals>
            <properties>
                <exec.args>-classpath %classpath com.github.wshackle.java4cpp.J4CppMain -verbose -natives NativeRunnable=java.lang.Runnable  -classes CallRunnable</exec.args>
                <exec.executable>java</exec.executable>
                <exec.workingdir>examples/NativeRunnable</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>CUSTOM-debug_crcl4java_cpp_example</actionName>
            <displayName>debug_crcl4java_cpp_example</displayName>
            <preAction>build-with-dependencies</preAction>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
                <goal>-DskipTests</goal>
            </goals>
            <properties>
                <exec.args>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address} -classpath %classpath com.github.wshackle.java4cpp.J4CppMain --verbose -p crcl -n crclj -j ../crcl4java-utils-1.3-jar-with-dependencies.jar</exec.args>
                <exec.executable>java</exec.executable>
                <jpda.listen>true</jpda.listen>
                <exec.workingdir>/home/shackle/usnistgov/crcl/tools/java/crcl4java/examples/C++/generated</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>CUSTOM-crcl4java_cloner</actionName>
            <displayName>crcl4java_cloner</displayName>
            <preAction>build-with-dependencies</preAction>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
                <goal>-DskipTests</goal>
            </goals>
            <properties>
                <exec.args>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address} -classpath %classpath com.github.wshackle.java4cpp.J4CppMain --verbose -p crcl -n crclj -j /home/shackle/crcl/tools/java/crcl4java/crcl4java-base/target/crcl4java-base-1.9.1-SNAPSHOT.jar --javacloner crcl.utils.CRCLCopier</exec.args>
                <exec.executable>java</exec.executable>
                <jpda.listen>true</jpda.listen>
                <exec.workingdir>/home/shackle/crcl/tools/java/crcl4java/crcl4java-utils/src/main/java</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>CUSTOM-win_debug_crcl4java_cpp_example</actionName>
            <displayName>win_debug_crcl4java_cpp_example</displayName>
            <preAction>build-with-dependencies</preAction>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
                <goal>-DskipTests</goal>
            </goals>
            <properties>
                <exec.args>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address} -classpath %classpath com.github.wshackle.java4cpp.J4CppMain --verbose -p crcl -n crclj -j ../crcl4java-utils-1.3-jar-with-dependencies.jar</exec.args>
                <exec.executable>java</exec.executable>
                <jpda.listen>true</jpda.listen>
                <exec.workingdir>/home/shackle/usnistgov/crcl/tools/java/crcl4java/examples/C++/generated</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>CUSTOM-win_debug_crcl4java_cpp_test</actionName>
            <displayName>win_debug_crcl4java_cpp_test</displayName>
            <preAction>build-with-dependencies</preAction>
            <goals>
                <goal>process-classes</goal>
                <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
                <goal>-DskipTests</goal>
            </goals>
            <properties>
                <exec.args>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address} -classpath %classpath com.github.wshackle.java4cpp.J4CppMain --verbose -p crcl -n crclj -j "C:\Users\shackle\Documents\NetBeansProjects\GitHubProjects\usnistgov\crcl\tools\java\crcl4java\crcl4java-utils\target\crcl4java-utils-1.4-SNAPSHOT-jar-with-dependencies.jar"</exec.args>
                <exec.executable>java</exec.executable>
                <jpda.listen>true</jpda.listen>
                <exec.workingdir>src/test/resources</exec.workingdir>
            </properties>
        </action>
        <action>
            <actionName>CUSTOM-quick_deploy</actionName>
            <displayName>quick_deploy</displayName>
            <goals>
                <goal>deploy</goal>
            </goals>
            <activatedProfiles>
                <activatedProfile>skip_tests</activatedProfile>
                <activatedProfile>release</activatedProfile>
            </activatedProfiles>
        </action>
    </actions>
